cmake_minimum_required(VERSION 3.5)
set(PROJECT_NAME_MY server)
project(${PROJECT_NAME_MY} LANGUAGES CXX)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(FULL_PATH_TO_MYSQL_CONNECTOR_CPP_DIR ${CMAKE_SOURCE_DIR}/third_party/mysqlx)
set(JSON_BuildTests OFF CACHE INTERNAL "")
include_directories(${FULL_PATH_TO_MYSQL_CONNECTOR_CPP_DIR}/include)
include_directories(${FULL_PATH_TO_MYSQL_CONNECTOR_CPP_DIR}/include/mysqlx)
include_directories(${CMAKE_SOURCE_DIR}/third_party/libJson1/include)
include_directories(${CMAKE_SOURCE_DIR}/third_party/codec/cppcodec)
add_subdirectory(${CMAKE_SOURCE_DIR}/third_party/libJson1)
add_subdirectory(${CMAKE_SOURCE_DIR}/third_party/codec)
add_library( mysqlcpp8 SHARED IMPORTED )
set_target_properties( mysqlcpp8 PROPERTIES IMPORTED_LOCATION ${FULL_PATH_TO_MYSQL_CONNECTOR_CPP_DIR}/libmysqlcppconn8.so.2)
FIND_PACKAGE( Boost 1.74 REQUIRED COMPONENTS thread system coroutine)
set(OPENSSL_USE_STATIC_LIBS TRUE)
find_package(OpenSSL REQUIRED)
INCLUDE_DIRECTORIES( ${Boost_INCLUDE_DIR} )
add_library(${PROJECT_NAME_MY}_DBMaster DBMaster.h DBMaster.cpp)
target_link_libraries( ${PROJECT_NAME_MY}_DBMaster ${Boost_LIBRARIES} mysqlcpp8 OpenSSL::Crypto)
add_library(${PROJECT_NAME_MY}_MyWebSocket MyWebSocket.h MyWebSocket.cpp)
target_link_libraries( ${PROJECT_NAME_MY}_MyWebSocket ${Boost_LIBRARIES} )
add_library(${PROJECT_NAME_MY}_JsonMq JsonMq.h JsonMq.cpp)
target_link_libraries( ${PROJECT_NAME_MY}_JsonMq ${Boost_LIBRARIES} ${PROJECT_NAME_MY}_MyWebSocket)
add_library(${PROJECT_NAME_MY}_demon Server.h Server.cpp)
target_link_libraries(${PROJECT_NAME_MY}_demon OpenSSL::Crypto OpenSSL::SSL)
target_link_libraries( ${PROJECT_NAME_MY}_demon ${Boost_LIBRARIES} ${PROJECT_NAME_MY}_JsonMq)
target_link_libraries(${PROJECT_NAME_MY}_demon ${PROJECT_NAME_MY}_DBMaster)
add_executable(${PROJECT_NAME_MY}_ex main.cpp)
target_link_libraries(${PROJECT_NAME_MY}_ex ${PROJECT_NAME_MY}_demon)
